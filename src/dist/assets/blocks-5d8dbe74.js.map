{"version":3,"file":"blocks-5d8dbe74.js","sources":["../../blocks.jsx"],"sourcesContent":["import { BoxGeometry, MeshBasicMaterial } from \"three\"\nimport React, { createContext, useRef, useContext, useMemo } from \"react\"\nimport { useFrame, useThree } from \"@react-three/fiber\"\nimport lerp from \"lerp\"\nimport state from \"./store\"\nimport \"./styles.css\"\n\nconst offsetContext = createContext(0)\n\nfunction Block({ children, offset, factor, blockWidth, blockHeight, blockDepth, ...props }) {\n\tconst { offset: parentOffset, sectionHeight } = useBlock()\n\n\tconst ref = useRef()\n\n\toffset = offset !== undefined ? offset : parentOffset\n\n\tuseFrame(() => {\n\t\tconst curY = ref.current.position.y\n\t\tconst curTop = state.top.current\n\t\tref.current.position.y = lerp(curY, (curTop / state.zoom) * factor, 0.1)\n\t})\n\treturn (\n\t\t<offsetContext.Provider value={offset}>\n\t\t\t<group {...props} position={[0, -sectionHeight * offset * factor, 0]}>\n\t\t\t\t<group ref={ref}>{children}</group>\n\t\t\t</group>\n\t\t</offsetContext.Provider>\n\t)\n}\n\nfunction useBlock() {\n\tconst { sections, pages, zoom } = state\n\tconst { size, viewport } = useThree()\n\tconst offset = useContext(offsetContext)\n\tconst viewportWidth = viewport.width * zoom\n\tconst viewportHeight = viewport.height * zoom\n\tconst canvasWidth = viewportWidth / zoom\n\tconst canvasHeight = viewportHeight / zoom\n\tconst mobile = size.width < 700\n\tconst margin = canvasWidth * (mobile ? 0.2 : 0.1)\n\tconst contentMaxWidth = canvasWidth * (mobile ? 0.8 : 0.6)\n\tconst sectionHeight = canvasHeight * ((pages - 1) / (sections - 1))\n\tconst offsetFactor = (offset + 1.0) / sections\n\treturn {\n\t\tviewport,\n\t\toffset,\n\t\tviewportWidth,\n\t\tviewportHeight,\n\t\tcanvasWidth,\n\t\tcanvasHeight,\n\t\tmobile,\n\t\tmargin,\n\t\tcontentMaxWidth,\n\t\tsectionHeight,\n\t\toffsetFactor\n\t}\n}\n\nexport { Block, useBlock }\n"],"names":["offsetContext","createContext","Block","children","offset","factor","blockWidth","blockHeight","blockDepth","props","parentOffset","sectionHeight","useBlock","ref","useRef","useFrame","curY","curTop","state","lerp","jsx","sections","pages","zoom","size","viewport","useThree","useContext","viewportWidth","viewportHeight","canvasWidth","canvasHeight","mobile","margin","contentMaxWidth","offsetFactor"],"mappings":"ulBAOA,MAAMA,EAAgBC,EAAAA,cAAc,CAAC,EAErC,SAASC,EAAM,CAAE,SAAAC,EAAU,OAAAC,EAAQ,OAAAC,EAAQ,WAAAC,EAAY,YAAAC,EAAa,WAAAC,EAAY,GAAGC,GAAS,CAC3F,KAAM,CAAE,OAAQC,EAAc,cAAAC,GAAkBC,EAAS,EAEnDC,EAAMC,EAAAA,SAEH,OAAAV,EAAAA,IAAW,OAAYA,EAASM,EAEzCK,EAAS,IAAM,CACR,MAAAC,EAAOH,EAAI,QAAQ,SAAS,EAC5BI,EAASC,EAAM,IAAI,QACrBL,EAAA,QAAQ,SAAS,EAAIM,EAAKH,EAAOC,EAASC,EAAM,KAAQb,EAAQ,EAAG,CAAA,CACvE,EAEAe,EAAA,IAACpB,EAAc,SAAd,CAAuB,MAAOI,EAC9B,SAACgB,EAAAA,IAAA,QAAA,CAAO,GAAGX,EAAO,SAAU,CAAC,EAAG,CAACE,EAAgBP,EAASC,EAAQ,CAAC,EAClE,eAAC,QAAM,CAAA,IAAAQ,EAAW,SAAAV,CAAS,CAAA,CAC5B,CAAA,CACD,CAAA,CAEF,CAEA,SAASS,GAAW,CACnB,KAAM,CAAE,SAAAS,EAAU,MAAAC,EAAO,KAAAC,CAAA,EAASL,EAC5B,CAAE,KAAAM,EAAM,SAAAC,CAAS,EAAIC,EAAS,EAC9BtB,EAASuB,aAAW3B,CAAa,EACjC4B,EAAgBH,EAAS,MAAQF,EACjCM,EAAiBJ,EAAS,OAASF,EACnCO,EAAcF,EAAgBL,EAC9BQ,EAAeF,EAAiBN,EAChCS,EAASR,EAAK,MAAQ,IACtBS,EAASH,GAAeE,EAAS,GAAM,IACvCE,EAAkBJ,GAAeE,EAAS,GAAM,IAChDrB,EAAgBoB,IAAiBT,EAAQ,IAAMD,EAAW,IAC1Dc,GAAgB/B,EAAS,GAAOiB,EAC/B,MAAA,CACN,SAAAI,EACA,OAAArB,EACA,cAAAwB,EACA,eAAAC,EACA,YAAAC,EACA,aAAAC,EACA,OAAAC,EACA,OAAAC,EACA,gBAAAC,EACA,cAAAvB,EACA,aAAAwB,CAAA,CAEF"}