{"version":3,"file":"Text-8a0bcaad.js","sources":["../../components/Text.jsx"],"sourcesContent":["import { Vector3 } from \"three\"\nimport { FontLoader } from \"three/addons/loaders/FontLoader.js\"\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\"\nimport React, { useCallback, useRef } from \"react\"\nimport { useFrame, useLoader } from \"@react-three/fiber\"\nimport lerp from \"lerp\"\nimport state from \"../store\"\n\nfunction Text({ children, size = 1, left, right, top, bottom, color = \"white\", opacity = 1, height = 0.01, layers = 0, font = \"/MOONGET_Heavy.blob\", ...props }) {\n\tconst data = useLoader(FontLoader, font)\n\tconst geom = new TextGeometry(children, { font: data, size: 1, height, curveSegments: 32 })\n\n\tconst onUpdate = useCallback(\n\t\t(self) => {\n\t\t\tconst box = new Vector3()\n\t\t\tself.geometry.computeBoundingBox()\n\t\t\tself.geometry.boundingBox.getSize(box)\n\t\t\tself.position.x = left ? 0 : right ? -box.x : -box.x / 2\n\t\t\tself.position.y = top ? 0 : bottom ? -box.y : -box.y / 2\n\t\t},\n\t\t[left, right, top, bottom]\n\t)\n\n\tconst ref = useRef()\n\tlet last = state.top.current\n\tuseFrame(() => {\n\t\tref.current.shift = lerp(ref.current.shift, (state.top.current - last) / 100, 0.1)\n\t\tlast = state.top.current\n\t})\n\n\treturn (\n\t\t<group {...props} scale={[size, size, 0.1]}>\n\t\t\t<mesh geometry={geom} onUpdate={onUpdate} frustumCulled={false}>\n\t\t\t\t<customMaterial ref={ref} color={color} transparent opacity={opacity} />\n\t\t\t</mesh>\n\t\t</group>\n\t)\n}\n\nconst MultilineText = ({ text, size = 1, lineHeight = 1, position = [0, 0, 0], ...props }) =>\n\ttext.split(\"\\n\").map((text, index) => <Text key={index} size={size} {...props} position={[position[0], position[1] - index * lineHeight, position[2]]} children={text} />)\n\nexport { Text, MultilineText }\n"],"names":["Text","children","size","left","right","top","bottom","color","opacity","height","layers","font","props","data","useLoader","FontLoader","geom","TextGeometry","onUpdate","useCallback","self","box","Vector3","ref","useRef","last","state","useFrame","lerp","jsx","MultilineText","text","lineHeight","position","index"],"mappings":"inBAQA,SAASA,EAAK,CAAE,SAAAC,EAAU,KAAAC,EAAO,EAAG,KAAAC,EAAM,MAAAC,EAAO,IAAAC,EAAK,OAAAC,EAAQ,MAAAC,EAAQ,QAAS,QAAAC,EAAU,EAAG,OAAAC,EAAS,IAAM,OAAAC,EAAS,EAAG,KAAAC,EAAO,sBAAuB,GAAGC,GAAS,CAC1J,MAAAC,EAAOC,EAAUC,EAAYJ,CAAI,EACjCK,EAAO,IAAIC,EAAahB,EAAU,CAAE,KAAMY,EAAM,KAAM,EAAG,OAAAJ,EAAQ,cAAe,EAAI,CAAA,EAEpFS,EAAWC,EAAA,YACfC,GAAS,CACH,MAAAC,EAAM,IAAIC,EAChBF,EAAK,SAAS,qBACTA,EAAA,SAAS,YAAY,QAAQC,CAAG,EAChCD,EAAA,SAAS,EAAIjB,EAAO,EAAIC,EAAQ,CAACiB,EAAI,EAAI,CAACA,EAAI,EAAI,EAClDD,EAAA,SAAS,EAAIf,EAAM,EAAIC,EAAS,CAACe,EAAI,EAAI,CAACA,EAAI,EAAI,CACxD,EACA,CAAClB,EAAMC,EAAOC,EAAKC,CAAM,CAAA,EAGpBiB,EAAMC,EAAAA,SACR,IAAAC,EAAOC,EAAM,IAAI,QACrB,OAAAC,EAAS,IAAM,CACVJ,EAAA,QAAQ,MAAQK,EAAKL,EAAI,QAAQ,OAAQG,EAAM,IAAI,QAAUD,GAAQ,IAAK,EAAG,EACjFA,EAAOC,EAAM,IAAI,OAAA,CACjB,EAGAG,EAAA,IAAC,QAAO,CAAA,GAAGjB,EAAO,MAAO,CAACV,EAAMA,EAAM,EAAG,EACxC,SAAC2B,EAAA,IAAA,OAAA,CAAK,SAAUb,EAAM,SAAAE,EAAoB,cAAe,GACxD,SAACW,EAAA,IAAA,iBAAA,CAAe,IAAAN,EAAU,MAAAhB,EAAc,YAAW,GAAC,QAAAC,CAAkB,CAAA,CACvE,CAAA,CACD,CAAA,CAEF,CAEM,MAAAsB,EAAgB,CAAC,CAAE,KAAAC,EAAM,KAAA7B,EAAO,EAAG,WAAA8B,EAAa,EAAG,SAAAC,EAAW,CAAC,EAAG,EAAG,CAAC,EAAG,GAAGrB,KACjFmB,EAAK,MAAM;AAAA,CAAI,EAAE,IAAI,CAACA,EAAMG,IAAUL,MAAC7B,GAAiB,KAAAE,EAAa,GAAGU,EAAO,SAAU,CAACqB,EAAS,CAAC,EAAGA,EAAS,CAAC,EAAIC,EAAQF,EAAYC,EAAS,CAAC,CAAC,EAAG,SAAUF,CAAhH,EAAAG,CAAsH,CAAE"}