{"version":3,"file":"Diamonds-ad611391.js","sources":["../../diamonds/BackfaceMaterial.js","../../diamonds/RefractionMaterial.js","../../diamonds/Diamonds.jsx"],"sourcesContent":["import { ShaderMaterial, BackSide } from \"three\"\n\nexport default class BackfaceMaterial extends ShaderMaterial {\n\tconstructor() {\n\t\tsuper({\n\t\t\tvertexShader: `varying vec3 worldNormal;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize(modelViewMatrix * transformedNormal).xyz;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n\t\t\tfragmentShader: `varying vec3 worldNormal;\n      void main() {\n        gl_FragColor = vec4(worldNormal, 1.0);\n\n      }`,\n\t\t\tside: BackSide\n\t\t})\n\t}\n}\n","import { ShaderMaterial } from \"three\"\n\nexport default class RefractionMaterial extends ShaderMaterial {\n\tconstructor(options) {\n\t\tsuper({\n\t\t\tvertexShader: `varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      void main() {\n        vec4 transformedNormal = vec4(normal, 0.);\n        vec4 transformedPosition = vec4(position, 1.0);\n        #ifdef USE_INSTANCING\n          transformedNormal = instanceMatrix * transformedNormal;\n          transformedPosition = instanceMatrix * transformedPosition;\n        #endif\n        worldNormal = normalize( modelViewMatrix * transformedNormal).xyz;\n        viewDirection = normalize((modelMatrix * vec4( position, 1.0)).xyz - cameraPosition);;\n        gl_Position = projectionMatrix * modelViewMatrix * transformedPosition;\n      }`,\n\t\t\tfragmentShader: `uniform sampler2D envMap;\n      uniform sampler2D backfaceMap;\n      uniform float refraction;\n      uniform vec2 resolution;\n      varying vec3 worldNormal;\n      varying vec3 viewDirection;\n      float fresnelFunc(vec3 viewDirection, vec3 worldNormal) {\n        return pow(1.05 + dot(viewDirection, worldNormal), 100.0);\n      }\n      void main() {\n        vec2 uv = gl_FragCoord.xy / resolution;\n        vec3 normal = worldNormal * (1.0 - 0.7) - texture2D(backfaceMap, uv).rgb * 0.7;\n        vec4 color = texture2D(envMap, uv += refract(viewDirection, normal, 1.0/refraction).xy);\n        gl_FragColor = vec4(mix(color.rgb, vec3(0.4), fresnelFunc(viewDirection, normal)), 1.0);\n\n      }`,\n\t\t\tuniforms: {\n\t\t\t\tenvMap: { value: options.envMap },\n\t\t\t\tbackfaceMap: { value: options.backfaceMap },\n\t\t\t\tresolution: { value: options.resolution },\n\t\t\t\trefraction: { value: 1.0 }\n\t\t\t}\n\t\t})\n\t}\n}\n","import { WebGLRenderTarget, Object3D } from \"three\"\nimport React, { useRef, useMemo, useLayoutEffect } from \"react\"\nimport { useLoader, useThree, useFrame } from \"@react-three/fiber\"\nimport { GLTFLoader } from \"three/examples/jsm/loaders/GLTFLoader\"\nimport lerp from \"lerp\"\nimport BackfaceMaterial from \"./BackfaceMaterial\"\nimport RefractionMaterial from \"./RefractionMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst dummy = new Object3D()\nexport default function Diamonds() {\n\tconst { nodes } = useLoader(GLTFLoader, \"/diamond.glb\")\n\n\tuseLayoutEffect(() => {\n\t\tnodes.pCone1_lambert1_0.geometry.center()\n\t\treturn undefined\n\t}, [])\n\n\tconst { size, gl, scene, camera, clock } = useThree()\n\tconst { contentMaxWidth, sectionHeight, mobile } = useBlock()\n\tconst model = useRef()\n\tconst ratio = gl.getPixelRatio()\n\n\tconst [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial] = useMemo(() => {\n\t\tconst envFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n\t\tconst backfaceFbo = new WebGLRenderTarget(size.width * ratio, size.height * ratio)\n\t\tconst backfaceMaterial = new BackfaceMaterial()\n\t\tconst refractionMaterial = new RefractionMaterial({\n\t\t\tenvMap: envFbo.texture,\n\t\t\tbackfaceMap: backfaceFbo.texture,\n\t\t\tresolution: [size.width * ratio, size.height * ratio]\n\t\t})\n\t\treturn [envFbo, backfaceFbo, backfaceMaterial, refractionMaterial]\n\t}, [size, ratio])\n\n\tuseFrame(() => {\n\t\tstate.diamonds.forEach((data, i) => {\n\t\t\tconst t = clock.getElapsedTime() / 2\n\t\t\tconst { x, offset, scale, factor } = data\n\t\t\tconst s = (contentMaxWidth / 35) * scale\n\t\t\tdata.pos.set(mobile ? 0 : x, lerp(data.pos.y, -sectionHeight * offset * factor + (state.top.current / state.zoom) * factor, 0.1), -35)\n\t\t\tmodel.current.position.z = 400\n\t\t\tdummy.position.copy(data.pos)\n\t\t\tdummy.rotation.set(0, t * 0.6, -0.6)\n\t\t\tdummy.scale.set(s, s + 11, s)\n\t\t\tdummy.updateMatrix()\n\t\t\tmodel.current.setMatrixAt(i, dummy.matrix)\n\t\t\tmodel.current.instanceMatrix.needsUpdate = true\n\t\t})\n\n\t\tgl.autoClear = false\n\t\tcamera.layers.set(0)\n\t\tgl.setRenderTarget(envFbo)\n\t\tgl.clearColor()\n\t\tgl.render(scene, camera)\n\t\tgl.clearDepth()\n\t\tcamera.layers.set(1)\n\t\tmodel.current.material = backfaceMaterial\n\t\tgl.setRenderTarget(backfaceFbo)\n\t\tgl.clearDepth()\n\t\tgl.render(scene, camera)\n\t\tcamera.layers.set(0)\n\t\tgl.setRenderTarget(null)\n\t\tgl.render(scene, camera)\n\t\tgl.clearDepth()\n\t\tcamera.layers.set(1)\n\t\tmodel.current.material = refractionMaterial\n\t\tgl.render(scene, camera)\n\t}, 1)\n\n\treturn <instancedMesh ref={model} layers={1} args={[nodes.pCone1_lambert1_0.geometry, null, state.diamonds.length]} position={[0, 0, 50]} />\n}\n"],"names":["BackfaceMaterial","ShaderMaterial","BackSide","RefractionMaterial","options","dummy","Object3D","Diamonds","nodes","useLoader","GLTFLoader","useLayoutEffect","size","gl","scene","camera","clock","useThree","contentMaxWidth","sectionHeight","mobile","useBlock","model","useRef","ratio","envFbo","backfaceFbo","backfaceMaterial","refractionMaterial","useMemo","WebGLRenderTarget","useFrame","state","data","i","t","x","offset","scale","factor","s","lerp","jsx"],"mappings":"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"}