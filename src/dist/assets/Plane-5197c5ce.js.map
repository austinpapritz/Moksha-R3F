{"version":3,"file":"Plane-5197c5ce.js","sources":["../../components/CustomMaterial.js","../../components/Plane.jsx"],"sourcesContent":["import { ShaderMaterial, Color } from \"three\"\nimport { extend } from \"@react-three/fiber\"\n\nclass CustomMaterial extends ShaderMaterial {\n\tconstructor() {\n\t\tsuper({\n\t\t\tvertexShader: `uniform float scale;\n      uniform float shift;\n      varying vec2 vUv;\n      void main() {\n        vec3 pos = position;\n        pos.y = pos.y + ((sin(uv.x * 3.1415926535897932384626433832795) * shift * 2.0) * 0.125);\n        vUv = uv;\n        gl_Position = projectionMatrix * modelViewMatrix * vec4(pos,1.);\n      }`,\n\t\t\tfragmentShader: `uniform sampler2D tex;\n      uniform float hasTexture;\n      uniform float shift;\n      uniform float scale;\n      uniform vec3 color;\n      uniform float opacity;\n      varying vec2 vUv;\n      void main() {\n        float angle = 1.55;\n        vec2 p = (vUv - vec2(0.5, 0.5)) * (1.0 - scale) + vec2(0.5, 0.5);\n        vec2 offset = shift / 4.0 * vec2(cos(angle), sin(angle));\n        vec4 cr = texture2D(tex, p + offset);\n        vec4 cga = texture2D(tex, p);\n        vec4 cb = texture2D(tex, p - offset);\n        if (hasTexture == 1.0) gl_FragColor = vec4(cr.r, cga.g, cb.b, cga.a);\n        else gl_FragColor = vec4(color, opacity);\n      }`,\n\t\t\tuniforms: {\n\t\t\t\ttex: { value: null },\n\t\t\t\thasTexture: { value: 0 },\n\t\t\t\tscale: { value: 0 },\n\t\t\t\tshift: { value: 0 },\n\t\t\t\topacity: { value: 1 },\n\t\t\t\tcolor: { value: new Color(\"white\") }\n\t\t\t}\n\t\t})\n\t}\n\n\tset scale(value) {\n\t\tthis.uniforms.scale.value = value\n\t}\n\n\tget scale() {\n\t\treturn this.uniforms.scale.value\n\t}\n\n\tset shift(value) {\n\t\tthis.uniforms.shift.value = value\n\t}\n\n\tget shift() {\n\t\treturn this.uniforms.shift.value\n\t}\n\n\tset map(value) {\n\t\tthis.uniforms.hasTexture.value = !!value\n\t\tthis.uniforms.tex.value = value\n\t}\n\n\tget map() {\n\t\treturn this.uniforms.tex.value\n\t}\n\n\tget color() {\n\t\treturn this.uniforms.color.value\n\t}\n\n\tget opacity() {\n\t\treturn this.uniforms.opacity.value\n\t}\n\n\tset opacity(value) {\n\t\tif (this.uniforms) this.uniforms.opacity.value = value\n\t}\n}\n\nextend({ CustomMaterial })\n","import React, { forwardRef, useRef } from \"react\"\nimport { useFrame } from \"@react-three/fiber\"\nimport lerp from \"lerp\"\nimport \"./CustomMaterial\"\nimport { useBlock } from \"../blocks\"\nimport state from \"../store\"\n\nconst Plane = forwardRef(({ color = \"white\", shift = 1, opacity = 1, args, map, ...props }, ref) => {\n\tconst { viewportHeight, offsetFactor } = useBlock()\n\tconst material = useRef()\n\tlet last = state.top.current\n\tuseFrame(() => {\n\t\tconst { pages, top } = state\n\t\tmaterial.current.scale = lerp(material.current.scale, offsetFactor - top.current / ((pages - 1) * viewportHeight), 0.1)\n\t\tmaterial.current.shift = lerp(material.current.shift, ((top.current - last) / shift) * 1.5, 0.1)\n\t\tlast = top.current\n\t})\n\treturn (\n\t\t<mesh ref={ref} {...props}>\n\t\t\t<planeGeometry args={args} />\n\t\t\t<customMaterial ref={material} color={color} map={map} transparent opacity={opacity} />\n\t\t</mesh>\n\t)\n})\n\nexport default Plane\n"],"names":["CustomMaterial","ShaderMaterial","Color","value","extend","Plane","forwardRef","color","shift","opacity","args","map","props","ref","viewportHeight","offsetFactor","useBlock","material","useRef","last","state","useFrame","pages","top","lerp","jsxs","jsx"],"mappings":"0pBAGA,MAAMA,UAAuBC,CAAe,CAC3C,aAAc,CACb,MAAM,CACL,aAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SASd,eAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAiBhB,SAAU,CACT,IAAK,CAAE,MAAO,IAAM,EACpB,WAAY,CAAE,MAAO,CAAG,EACxB,MAAO,CAAE,MAAO,CAAG,EACnB,MAAO,CAAE,MAAO,CAAG,EACnB,QAAS,CAAE,MAAO,CAAG,EACrB,MAAO,CAAE,MAAO,IAAIC,EAAM,OAAO,CAAG,CACpC,CACJ,CAAG,CACD,CAED,IAAI,MAAMC,EAAO,CAChB,KAAK,SAAS,MAAM,MAAQA,CAC5B,CAED,IAAI,OAAQ,CACX,OAAO,KAAK,SAAS,MAAM,KAC3B,CAED,IAAI,MAAMA,EAAO,CAChB,KAAK,SAAS,MAAM,MAAQA,CAC5B,CAED,IAAI,OAAQ,CACX,OAAO,KAAK,SAAS,MAAM,KAC3B,CAED,IAAI,IAAIA,EAAO,CACd,KAAK,SAAS,WAAW,MAAQ,CAAC,CAACA,EACnC,KAAK,SAAS,IAAI,MAAQA,CAC1B,CAED,IAAI,KAAM,CACT,OAAO,KAAK,SAAS,IAAI,KACzB,CAED,IAAI,OAAQ,CACX,OAAO,KAAK,SAAS,MAAM,KAC3B,CAED,IAAI,SAAU,CACb,OAAO,KAAK,SAAS,QAAQ,KAC7B,CAED,IAAI,QAAQA,EAAO,CACd,KAAK,WAAU,KAAK,SAAS,QAAQ,MAAQA,EACjD,CACF,CAEAC,EAAO,CAAE,eAAAJ,CAAgB,CAAA,EC1EzB,MAAMK,EAAQC,EAAAA,WAAW,CAAC,CAAE,MAAAC,EAAQ,QAAS,MAAAC,EAAQ,EAAG,QAAAC,EAAU,EAAG,KAAAC,EAAM,IAAAC,EAAK,GAAGC,CAAA,EAASC,IAAQ,CACnG,KAAM,CAAE,eAAAC,EAAgB,aAAAC,CAAa,EAAIC,EAAS,EAC5CC,EAAWC,EAAAA,SACb,IAAAC,EAAOC,EAAM,IAAI,QACrB,OAAAC,EAAS,IAAM,CACR,KAAA,CAAE,MAAAC,EAAO,IAAAC,CAAQ,EAAAH,EACvBH,EAAS,QAAQ,MAAQO,EAAKP,EAAS,QAAQ,MAAOF,EAAeQ,EAAI,UAAYD,EAAQ,GAAKR,GAAiB,EAAG,EAC7GG,EAAA,QAAQ,MAAQO,EAAKP,EAAS,QAAQ,OAASM,EAAI,QAAUJ,GAAQX,EAAS,IAAK,EAAG,EAC/FW,EAAOI,EAAI,OAAA,CACX,EAECE,EAAAA,KAAA,OAAA,CAAK,IAAAZ,EAAW,GAAGD,EACnB,SAAA,CAAAc,MAAC,iBAAc,KAAAhB,EAAY,EAC3BgB,MAAC,kBAAe,IAAKT,EAAU,MAAAV,EAAc,IAAAI,EAAU,YAAW,GAAC,QAAAF,EAAkB,CACtF,CAAA,CAAA,CAEF,CAAC"}